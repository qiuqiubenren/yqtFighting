{"remainingRequest":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\graduateSys\\registration\\front\\src\\views\\doctor\\userBoard\\index.vue?vue&type=template&id=e8ea9b70","dependencies":[{"path":"D:\\graduateSys\\registration\\front\\src\\views\\doctor\\userBoard\\index.vue","mtime":1743403543344},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739857231742},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1739857212422},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739857231742},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739857212415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}