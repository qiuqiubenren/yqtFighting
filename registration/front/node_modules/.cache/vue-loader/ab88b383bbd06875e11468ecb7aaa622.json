{"remainingRequest":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\graduateSys\\registration\\front\\src\\views\\demo\\antvActive\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\graduateSys\\registration\\front\\src\\views\\demo\\antvActive\\index.vue","mtime":1743403543342},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739857231742},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1739857230815},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739857231742},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739857212415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgew0KICAgIFBpZSwNCiAgICBtZWFzdXJlVGV4dFdpZHRoDQp9IGZyb20gJ0BhbnR2L2cycGxvdCc7DQppbXBvcnQgew0KICAgIGdldEFudHZWb0xpc3QNCn0gZnJvbSAnLi9hcGkuanMnOw0KZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICJ0ZXN0LXBhZ2UiLA0KICAgIGNvbXBvbmVudHM6IHt9LA0KICAgIHByb3BzOiB7fSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgZGVwQ291bnREYXRhOiBbew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+mbtumjn+exuycsDQogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAyNw0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+WGt+WGu+exuycsDQogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAyNQ0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+eDn+mFkuexuycsDQogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxOA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+eUn+mynOexuycsDQogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxNQ0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+aVo+ijheexuycsDQogICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxMA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+awtOaenOexuycsDQogICAgICAgICAgICAgICAgICAgIHZhbHVlOiA1DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIHBpZVBsb3Q6IHt9LA0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0aGlzLmluaXRBbnR2RngoKTsNCiAgICAgICAgICAgIHRoaXMuZ2V0QW50dlZvTGlzdEZ4KCk7DQogICAgICAgIH0sDQogICAgICAgIGdldEFudHZWb0xpc3RGeCgpIHsNCiAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpczsNCiAgICAgICAgICAgIGdldEFudHZWb0xpc3QoKS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgaWYocmVzLnN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhhdC5waWVQbG90LmNoYW5nZURhdGEocmVzLnJlc3VsdCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgfSwNCiAgICAgICAgcmVuZGVyU3RhdGlzdGljKGNvbnRhaW5lcldpZHRoLCB0ZXh0LCBzdHlsZSkgew0KICAgICAgICAgICAgY29uc3Qgew0KICAgICAgICAgICAgICAgIHdpZHRoOiB0ZXh0V2lkdGgsDQogICAgICAgICAgICAgICAgaGVpZ2h0OiB0ZXh0SGVpZ2h0DQogICAgICAgICAgICB9ID0gbWVhc3VyZVRleHRXaWR0aCh0ZXh0LCBzdHlsZSk7DQogICAgICAgICAgICBjb25zdCBSID0gY29udGFpbmVyV2lkdGggLyAyOw0KICAgICAgICAgICAgbGV0IHNjYWxlID0gMTsNCiAgICAgICAgICAgIGlmIChjb250YWluZXJXaWR0aCA8IHRleHRXaWR0aCkgew0KICAgICAgICAgICAgICAgIHNjYWxlID0gTWF0aC5taW4oTWF0aC5zcXJ0KE1hdGguYWJzKE1hdGgucG93KFIsIDIpIC8gKE1hdGgucG93KHRleHRXaWR0aCAvIDIsIDIpICsgTWF0aC5wb3codGV4dEhlaWdodCwgMikpKSksIDEpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY29uc3QgdGV4dFN0eWxlU3RyID0gYHdpZHRoOiR7Y29udGFpbmVyV2lkdGh9cHg7YDsNCiAgICAgICAgICAgIHJldHVybiBgPGRpdiBzdHlsZT0iJHt0ZXh0U3R5bGVTdHJ9O2ZvbnQtc2l6ZToke3NjYWxlfWVtO2xpbmUtaGVpZ2h0OiR7c2NhbGUgPCAxID8gMSA6ICdpbmhlcml0J307Ij4ke3RleHR9PC9kaXY+YDsNCiAgICAgICAgfSwNCiAgICAgICAgaW5pdEFudHZGeCgpIHsNCiAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpczsNCiAgICAgICAgICAgIHZhciBkYXRhID0gdGhpcy5kZXBDb3VudERhdGE7DQogICAgICAgICAgICB0aGlzLnBpZVBsb3QgPSBuZXcgUGllKCdjb250YWluZXInLCB7DQogICAgICAgICAgICAgICAgYXBwZW5kUGFkZGluZzogMTAsDQogICAgICAgICAgICAgICAgZGF0YSwNCiAgICAgICAgICAgICAgICBhbmdsZUZpZWxkOiAndmFsdWUnLA0KICAgICAgICAgICAgICAgIGNvbG9yRmllbGQ6ICd0aXRsZScsDQogICAgICAgICAgICAgICAgcmFkaXVzOiAxLA0KICAgICAgICAgICAgICAgIGlubmVyUmFkaXVzOiAwLjY0LA0KICAgICAgICAgICAgICAgIG1ldGE6IHsNCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogKHYpID0+IGAke3Z9IGAsDQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5uZXInLA0KICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6ICctNTAlJywNCiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsDQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIGF1dG9Sb3RhdGU6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAne3ZhbHVlfScsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBzdGF0aXN0aWM6IHsNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldFk6IC00LA0KICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tSHRtbDogKGNvbnRhaW5lciwgdmlldywgZGF0dW0pID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ID0gY29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGQgPSBNYXRoLnNxcnQoTWF0aC5wb3cod2lkdGggLyAyLCAyKSArIE1hdGgucG93KGhlaWdodCAvIDIsIDIpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZXh0ID0gZGF0dW0gPyBkYXR1bS50aXRsZSA6ICfmlZnluIjlt6XotYTliIbluIPlm74nOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LnJlbmRlclN0YXRpc3RpYyhkLCB0ZXh0LCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAyOA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogew0KICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0WTogNCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICczMnB4JywNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21IdG1sOiAoY29udGFpbmVyLCB2aWV3LCBkYXR1bSwgZGF0YSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ID0gY29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSBkYXR1bSA/IGAgJHtkYXR1bS52YWx1ZX3lhYNgIDogYCAke2RhdGEucmVkdWNlKChyLCBkKSA9PiByICsgZC52YWx1ZSwgMCl95YWDYDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC5yZW5kZXJTdGF0aXN0aWMod2lkdGgsIHRleHQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDMyDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgLy8g5re75YqgIOS4reW/g+e7n+iuoeaWh+acrCDkuqTkupINCiAgICAgICAgICAgICAgICBpbnRlcmFjdGlvbnM6IFt7DQogICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlbGVtZW50LXNlbGVjdGVkJw0KICAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2VsZW1lbnQtYWN0aXZlJw0KICAgICAgICAgICAgICAgIH0sIHsNCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3BpZS1zdGF0aXN0aWMtYWN0aXZlJw0KICAgICAgICAgICAgICAgIH1dLA0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB0aGlzLnBpZVBsb3QucmVuZGVyKCk7DQogICAgICAgICAgICB0aGlzLnBpZVBsb3Qub24oJ2VsZW1lbnQ6Y2xpY2snLCAoYXJncykgPT4gew0KICAgICAgICAgICAgICAgIHRoYXQuZ2V0UGllVXNlckl0ZW1GeChhcmdzLmRhdGEuZGF0YS50aXRsZSk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIHRoaXMuaW5pdCgpOw0KICAgIH0sDQp9Ow0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/demo/antvActive","sourcesContent":["<template>\r\n<div>\r\n    <Alert type=\"success\" show-icon banner>温馨提示：该图数据来源自教师模块，即数据展示模块下的复杂表格样例！</Alert>\r\n    <div id=\"container\"></div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    Pie,\r\n    measureTextWidth\r\n} from '@antv/g2plot';\r\nimport {\r\n    getAntvVoList\r\n} from './api.js';\r\nexport default {\r\n    name: \"test-page\",\r\n    components: {},\r\n    props: {},\r\n    data() {\r\n        return {\r\n            depCountData: [{\r\n                    title: '零食类',\r\n                    value: 27\r\n                },\r\n                {\r\n                    title: '冷冻类',\r\n                    value: 25\r\n                },\r\n                {\r\n                    title: '烟酒类',\r\n                    value: 18\r\n                },\r\n                {\r\n                    title: '生鲜类',\r\n                    value: 15\r\n                },\r\n                {\r\n                    title: '散装类',\r\n                    value: 10\r\n                },\r\n                {\r\n                    title: '水果类',\r\n                    value: 5\r\n                }\r\n            ],\r\n            piePlot: {},\r\n        }\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.initAntvFx();\r\n            this.getAntvVoListFx();\r\n        },\r\n        getAntvVoListFx() {\r\n            var that = this;\r\n            getAntvVoList().then(res => {\r\n                if(res.success) {\r\n                    that.piePlot.changeData(res.result);\r\n                }\r\n            })\r\n        },\r\n        renderStatistic(containerWidth, text, style) {\r\n            const {\r\n                width: textWidth,\r\n                height: textHeight\r\n            } = measureTextWidth(text, style);\r\n            const R = containerWidth / 2;\r\n            let scale = 1;\r\n            if (containerWidth < textWidth) {\r\n                scale = Math.min(Math.sqrt(Math.abs(Math.pow(R, 2) / (Math.pow(textWidth / 2, 2) + Math.pow(textHeight, 2)))), 1);\r\n            }\r\n            const textStyleStr = `width:${containerWidth}px;`;\r\n            return `<div style=\"${textStyleStr};font-size:${scale}em;line-height:${scale < 1 ? 1 : 'inherit'};\">${text}</div>`;\r\n        },\r\n        initAntvFx() {\r\n            var that = this;\r\n            var data = this.depCountData;\r\n            this.piePlot = new Pie('container', {\r\n                appendPadding: 10,\r\n                data,\r\n                angleField: 'value',\r\n                colorField: 'title',\r\n                radius: 1,\r\n                innerRadius: 0.64,\r\n                meta: {\r\n                    value: {\r\n                        formatter: (v) => `${v} `,\r\n                    },\r\n                },\r\n                label: {\r\n                    type: 'inner',\r\n                    offset: '-50%',\r\n                    style: {\r\n                        textAlign: 'center',\r\n                    },\r\n                    autoRotate: false,\r\n                    content: '{value}',\r\n                },\r\n                statistic: {\r\n                    title: {\r\n                        offsetY: -4,\r\n                        customHtml: (container, view, datum) => {\r\n                            const {\r\n                                width,\r\n                                height\r\n                            } = container.getBoundingClientRect();\r\n                            const d = Math.sqrt(Math.pow(width / 2, 2) + Math.pow(height / 2, 2));\r\n                            const text = datum ? datum.title : '教师工资分布图';\r\n                            return that.renderStatistic(d, text, {\r\n                                fontSize: 28\r\n                            });\r\n                        },\r\n                    },\r\n                    content: {\r\n                        offsetY: 4,\r\n                        style: {\r\n                            fontSize: '32px',\r\n                        },\r\n                        customHtml: (container, view, datum, data) => {\r\n                            const {\r\n                                width\r\n                            } = container.getBoundingClientRect();\r\n                            const text = datum ? ` ${datum.value}元` : ` ${data.reduce((r, d) => r + d.value, 0)}元`;\r\n                            return that.renderStatistic(width, text, {\r\n                                fontSize: 32\r\n                            });\r\n                        },\r\n                    },\r\n                },\r\n                // 添加 中心统计文本 交互\r\n                interactions: [{\r\n                    type: 'element-selected'\r\n                }, {\r\n                    type: 'element-active'\r\n                }, {\r\n                    type: 'pie-statistic-active'\r\n                }],\r\n            });\r\n            this.piePlot.render();\r\n            this.piePlot.on('element:click', (args) => {\r\n                that.getPieUserItemFx(args.data.data.title);\r\n            });\r\n        },\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#container {\r\n    width: 100%;\r\n    height: 700px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.antvTitle {\r\n    font-size: 20px;\r\n    text-align: center;\r\n    justify-content: center;\r\n    display: flex;\r\n\r\n    .antvSecondTitle {\r\n        color: #ff9900;\r\n        font-size: 22px;\r\n    }\r\n}\r\n</style>\r\n"]}]}