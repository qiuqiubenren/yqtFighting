{"remainingRequest":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\graduateSys\\registration\\front\\src\\views\\template\\upload-pic-thumb.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\graduateSys\\registration\\front\\src\\views\\template\\upload-pic-thumb.vue","mtime":1743403543276},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739857231742},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1739857230815},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739857231742},{"path":"D:\\graduateSys\\registration\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739857212415}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["upload-pic-thumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"upload-pic-thumb.vue","sourceRoot":"src/views/template","sourcesContent":["<template>\r\n<div class=\"upload-thumb\">\r\n    <vuedraggable :list=\"uploadList\" :disabled=\"!draggable||!multiple\" :animation=\"200\" class=\"list-group\" ghost-class=\"thumb-ghost\" @end=\"onEnd\">\r\n        <div class=\"upload-list\" :style=\"{width: `calc(${width} + 2px)`, height: `calc(${height} + 2px)`, lineHeight: height}\" v-for=\"(item, index) in uploadList\" :key=\"index\">\r\n            <div v-if=\"item.status == 'finished'\">\r\n                <img :src=\"item.url\" :style=\"{height: height}\" />\r\n                <div class=\"upload-list-cover\">\r\n                    <Icon type=\"ios-eye-outline\" @click=\"handleView(item.url, index)\"></Icon>\r\n                    <Icon type=\"ios-trash-outline\" @click=\"handleRemove(item)\"></Icon>\r\n                </div>\r\n            </div>\r\n            <div v-else>\r\n                <Progress v-if=\"item.showProgress\" :percent=\"item.percentage\" hide-info></Progress>\r\n            </div>\r\n        </div>\r\n    </vuedraggable>\r\n    <Upload ref=\"upload\" :multiple=\"multiple\" :show-upload-list=\"false\" :on-success=\"handleSuccess\" :on-error=\"handleError\" :format=\"format\" :accept=\"accept\" :max-size=\"maxSize*1024\" :on-format-error=\"handleFormatError\" :on-exceeded-size=\"handleMaxSize\" :before-upload=\"handleBeforeUpload\" type=\"drag\" :action=\"uploadFileUrl\" :headers=\"accessToken\" class=\"upload-btn\" :style=\"{width: width}\">\r\n        <div class=\"upload-camera\" :style=\"{width: width, height: height, lineHeight: height}\">\r\n            <Icon type=\"md-camera\" size=\"20\"></Icon>\r\n        </div>\r\n    </Upload>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport \"viewerjs/dist/viewer.css\";\r\nimport Viewer from \"viewerjs\";\r\nimport {\r\n    uploadFile\r\n} from \"@/api/index\";\r\nimport vuedraggable from \"vuedraggable\";\r\nexport default {\r\n    name: \"uploadPicThumb\",\r\n    components: {\r\n        vuedraggable\r\n    },\r\n    props: {\r\n        value: {\r\n            type: null\r\n        },\r\n        draggable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        multiple: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        maxSize: {\r\n            type: Number,\r\n            default: 5\r\n        },\r\n        limit: {\r\n            type: Number,\r\n            default: 10\r\n        },\r\n        width: {\r\n            type: String,\r\n            default: \"60px\"\r\n        },\r\n        height: {\r\n            type: String,\r\n            default: \"60px\"\r\n        },\r\n        accept: {\r\n            type: String,\r\n            default: \".jpg, .jpeg, .png, .gif\"\r\n        }\r\n    },\r\n    computed: {\r\n        format() {\r\n            if (this.accept) {\r\n                let format = [];\r\n                this.accept.split(\",\").forEach(e => {\r\n                    format.push(e.replace(\".\", \"\").replace(\" \", \"\"));\r\n                });\r\n                return format;\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            accessToken: {},\r\n            uploadFileUrl: uploadFile,\r\n            uploadList: []\r\n        };\r\n    },\r\n    methods: {\r\n        onEnd() {\r\n            this.returnValue();\r\n        },\r\n        init() {\r\n            this.setData(this.value, true);\r\n            this.accessToken = {\r\n                accessToken: this.getStore(\"accessToken\")\r\n            };\r\n        },\r\n        handleView(v, i) {\r\n            let image = new Image();\r\n            image.src = v;\r\n            let viewer = new Viewer(image, {\r\n                hidden: function () {\r\n                    viewer.destroy();\r\n                }\r\n            });\r\n            viewer.show();\r\n        },\r\n        handleRemove(file) {\r\n            const uploadList = this.uploadList;\r\n            this.uploadList.splice(uploadList.indexOf(file), 1);\r\n            this.returnValue();\r\n        },\r\n        handleSuccess(res, file) {\r\n            if (res.success) {\r\n                file.url = res.result;\r\n                // 单张图片处理\r\n                if (!this.multiple && this.uploadList.length > 0) {\r\n                    // 删除第一张\r\n                    this.uploadList.splice(0, 1);\r\n                }\r\n                this.uploadList.push(file);\r\n                // 返回组件值\r\n                this.returnValue();\r\n            } else {\r\n                this.$Message.error(res.message);\r\n            }\r\n        },\r\n        handleError(error, file, fileList) {\r\n            this.$Message.error(error.toString());\r\n        },\r\n        handleFormatError(file) {\r\n            this.$Notice.warning({\r\n                title: \"不支持的文件格式\",\r\n                desc: \"所选文件‘ \" +\r\n                    file.name +\r\n                    \" ’格式不正确, 请选择 \" +\r\n                    this.accept +\r\n                    \" 图片格式文件\"\r\n            });\r\n        },\r\n        handleMaxSize(file) {\r\n            this.$Notice.warning({\r\n                title: \"文件大小过大\",\r\n                desc: \"所选文件‘ \" +\r\n                    file.name +\r\n                    \" ’大小过大, 不得超过 \" +\r\n                    this.maxSize +\r\n                    \"M.\"\r\n            });\r\n        },\r\n        handleBeforeUpload() {\r\n            if (this.multiple && this.uploadList.length >= this.limit) {\r\n                this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        returnValue() {\r\n            if (!this.uploadList || this.uploadList.length < 1) {\r\n                if (!this.multiple) {\r\n                    this.$emit(\"input\", \"\");\r\n                    this.$emit(\"on-change\", \"\");\r\n                } else {\r\n                    this.$emit(\"input\", []);\r\n                    this.$emit(\"on-change\", []);\r\n                }\r\n                return;\r\n            }\r\n            if (!this.multiple) {\r\n                // 单张\r\n                let v = this.uploadList[0].url;\r\n                this.$emit(\"input\", v);\r\n                this.$emit(\"on-change\", v);\r\n            } else {\r\n                let v = [];\r\n                this.uploadList.forEach(e => {\r\n                    v.push(e.url);\r\n                });\r\n                this.$emit(\"input\", v);\r\n                this.$emit(\"on-change\", v);\r\n            }\r\n        },\r\n        setData(v, init) {\r\n            if (typeof v == \"string\") {\r\n                // 单张\r\n                if (this.multiple) {\r\n                    this.$Message.warning(\"多张上传仅支持数组数据类型\");\r\n                    return;\r\n                }\r\n                if (!v) {\r\n                    return;\r\n                }\r\n                this.uploadList = [];\r\n                let item = {\r\n                    url: v,\r\n                    status: \"finished\"\r\n                };\r\n                this.uploadList.push(item);\r\n                this.$emit(\"on-change\", v);\r\n            } else if (typeof v == \"object\") {\r\n                // 多张\r\n                if (!this.multiple) {\r\n                    this.$Message.warning(\"单张上传仅支持字符串数据类型\");\r\n                    return;\r\n                }\r\n                this.uploadList = [];\r\n                if (v.length > this.limit) {\r\n                    for (let i = 0; i < this.limit; i++) {\r\n                        let item = {\r\n                            url: v[i],\r\n                            status: \"finished\"\r\n                        };\r\n                        this.uploadList.push(item);\r\n                    }\r\n                    this.$emit(\"on-change\", v.slice(0, this.limit));\r\n                    if (init) {\r\n                        this.$emit(\"input\", v.slice(0, this.limit));\r\n                    }\r\n                    this.$Message.warning(\"最多只能上传\" + this.limit + \"张图片\");\r\n                } else {\r\n                    v.forEach(e => {\r\n                        let item = {\r\n                            url: e,\r\n                            status: \"finished\"\r\n                        };\r\n                        this.uploadList.push(item);\r\n                    });\r\n                    this.$emit(\"on-change\", v);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        value(val) {\r\n            this.setData(val);\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.upload-thumb {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n\r\n    .upload-list {\r\n        display: inline-block;\r\n        text-align: center;\r\n        border: 1px solid transparent;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        background: #fff;\r\n        position: relative;\r\n        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\r\n        margin-right: 8px;\r\n    }\r\n\r\n    .upload-list img {\r\n        object-fit: cover;\r\n    }\r\n\r\n    .upload-btn {\r\n        display: inline-block;\r\n    }\r\n\r\n    .upload-list-cover {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background: rgba(0, 0, 0, 0.6);\r\n    }\r\n\r\n    .upload-list:hover .upload-list-cover {\r\n        display: block;\r\n    }\r\n\r\n    .upload-list-cover i {\r\n        color: #fff;\r\n        font-size: 20px;\r\n        cursor: pointer;\r\n        margin: 0 2px;\r\n    }\r\n\r\n    .list-group {\r\n        display: inline-block;\r\n    }\r\n\r\n    .thumb-ghost {\r\n        opacity: 0.5;\r\n        background: #c8ebfb;\r\n    }\r\n}\r\n</style>\r\n"]}]}